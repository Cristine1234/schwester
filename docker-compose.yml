# Start docker desktop
# Maybe is necessary install docker compose using the command: docker-compose pull
# Run using command (this option makes terminal blocked): docker-compose up db 
# Run using command (this option makes terminal free): docker-compose up -d

version: '3.6'

services:
  db:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: "pg_adm123"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - ./sql/address_create.sql:/docker-entrypoint-initdb.d/01-address_create.sql
      - ./sql/patient_create.sql:/docker-entrypoint-initdb.d/02-patient_create.sql
      - ./sql/patient_addresses_create.sql:/docker-entrypoint-initdb.d/03-patient_addresses_create.sql
      - ./sql/condition_create.sql:/docker-entrypoint-initdb.d/04-condition_create.sql
      - ./sql/patient_health_create.sql:/docker-entrypoint-initdb.d/05-patient_health_create.sql
      - ./sql/patient_health_conditions_create.sql:/docker-entrypoint-initdb.d/06-patient_health_conditions_create.sql
      - ./sql/pain_location_create.sql:/docker-entrypoint-initdb.d/07-pain_location_create.sql
      - ./sql/pain_intensity_create.sql:/docker-entrypoint-initdb.d/08-pain_intensity_create.sql
      - ./sql/symptom_duration_create.sql:/docker-entrypoint-initdb.d/09-symptom_duration_create.sql
      - ./sql/symptom_create.sql:/docker-entrypoint-initdb.d/10-symptom_create.sql
      - ./sql/questionnaire_create.sql:/docker-entrypoint-initdb.d/11-questionnaire_create.sql
      - ./sql/questionnaire_symptoms_create.sql:/docker-entrypoint-initdb.d/12-questionnaire_symptoms_create.sql
      - ./sql/emergency_score_create.sql:/docker-entrypoint-initdb.d/13-emergency_score_create.sql
      - ./sql/address_insert.sql:/docker-entrypoint-initdb.d/14-address_insert.sql
      - ./sql/patient_insert.sql:/docker-entrypoint-initdb.d/15-patient_insert.sql
      - ./sql/patient_addresses_insert.sql:/docker-entrypoint-initdb.d/16-patient_addresses_insert.sql
      - ./sql/condition_insert.sql:/docker-entrypoint-initdb.d/17-condition_insert.sql
      - ./sql/patient_health_insert.sql:/docker-entrypoint-initdb.d/18-patient_health_insert.sql
      - ./sql/patient_health_conditions_insert.sql:/docker-entrypoint-initdb.d/19-patient_health_conditions_insert.sql
      - ./sql/pain_location_insert.sql:/docker-entrypoint-initdb.d/20-pain_location_insert.sql
      - ./sql/pain_intensity_insert.sql:/docker-entrypoint-initdb.d/21-pain_intensity_insert.sql
      - ./sql/symptom_duration_insert.sql:/docker-entrypoint-initdb.d/22-symptom_duration_insert.sql
      - ./sql/symptom_insert.sql:/docker-entrypoint-initdb.d/23-symptom_insert.sql
      - ./sql/emergency_score_insert.sql:/docker-entrypoint-initdb.d/24-emergency_score_insert.sql
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq_host
    ports:
      - "5672:5672"
      - "15672:15672"
  golden-hour-backend:
    container_name: gh-backend
    image: springboot-postgresq-backend
    build: ./backend
    ports:
      - "8085:8085"
    depends_on:
      - db
    links:
      - db:database
  
